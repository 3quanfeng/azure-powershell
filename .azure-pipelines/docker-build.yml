# Please don't use ADO UI defined scheduled triggers because it takes precedence over YAML scheduled triggers.
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/scheduled-triggers
name: Docker Release - Az${{parameters.azVersion}} 

parameters:
  - name: latest
    displayName: Is latest Az?
    type: boolean
    default: false
  - name: azVersion
    displayName: Az version
    type: string
    default: 3.3.0


pr: none
trigger: none

pool:
  vmImage: ubuntu-18.04

stages:
- stage: "Build"
  variables:
    Build_Date: ''
  jobs:
  - job: BuildJob
    steps:
    - task: PowerShell@2
      displayName: Get Current Date
      inputs:
        targetType: 'inline'
        script: |
          $date = (Get-Date).ToUniversalTime().ToString("yyyy-MM-ddTHH-mm-ssZ")
          Write-Host "##vso[task.setvariable variable=Build_Date]$date"
          Write-Host "Build_Date=$(Build_Date)"
        pwsh: true
    - task: Docker@2
      displayName: "Ubuntu - Build"
      inputs:
        containerRegistry: $(ACRConnection)
        repository: 'internal/azure-powershell'
        command: 'build'
        Dockerfile: '$(System.DefaultWorkingDirectory)/docker/Dockerfile-ubuntu-18.04'
        buildContext: '$(System.DefaultWorkingDirectory)/docker'
        tags: '${{parameters.azVersion}}-ubuntu-18.04'
        arguments: '--build-arg VERSION=${{parameters.azVersion}} --build-arg BUILD_DATE="$(Build_Date)"'
        addPipelineData: false
    - task: Docker@2
      displayName: "Ubuntu - Push"
      inputs:
        containerRegistry: $(ACRConnection)
        repository: 'internal/azure-powershell'
        command: 'push'
        tags: '${{parameters.azVersion}}-ubuntu-18.04'
        addPipelineData: false

- stage: Validation
  jobs:
  - job: Test
    pool: server
    cancelTimeoutInMinutes: 180
    steps:
    - task: ManualValidation@0
      displayName: Waiting for manual validation
      inputs:
        notifyUsers: 'dixue@microsoft.com'

- stage: Publish
  jobs:
  - job: Deploy
    steps:
    - task: AzureCLI@1
      displayName: Push to public
      inputs:
        azureSubscription: 'SDKInfrastructureSP'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az acr login --name $(ACRAccount)
          
          docker pull $(ACRServer)/internal/azure-powershell:${{parameters.azVersion}}-ubuntu-18.04
          docker tag $(ACRServer)/internal/azure-powershell:${{parameters.azVersion}}-ubuntu-18.04 $(ACRServer)/public/azure-powershell:${{parameters.azVersion}}-ubuntu-18.04
          docker push $(ACRServer)/public/azure-powershell:${{parameters.azVersion}}-ubuntu-18.04
    - task: AzureCLI@1
      displayName: Tag Latest 
      inputs:
        azureSubscription: 'SDKInfrastructureSP'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az acr login --name $(ACRAccount)
          docker tag $(ACRServer)/internal/azure-powershell:${{parameters.azVersion}}-ubuntu-18.04 $(ACRServer)/public/azure-powershell
          docker push $(ACRServer)/public/azure-powershell

          docker tag $(ACRServer)/internal/azure-powershell:${{parameters.azVersion}}-ubuntu-18.04 $(ACRServer)/public/azure-powershell:ubuntu-18.04
          docker push $(ACRServer)/public/azure-powershell:ubuntu-18.04
      condition: and(succeeded(), eq(${{parameters.latest}}, true))