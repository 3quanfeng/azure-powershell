parameters:
  osName: ''
  testFramework: ''
  testTarget: ''
  configuration: ''

steps:
- template: download-build-steps.yml
  parameters:
    osName: ${{ parameters.osName }}

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 2.1.x

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 3.1.x

- powershell: |
   Install-Module -Name Pester -RequiredVersion 4.10.1 -Force -SkipPublisherCheck
   Install-Module -Name Az.Accounts -Scope CurrentUser -Force
   $env:PSModulePath = $env:PSModulePath + ";" + (pwd).Path
   Get-ChildItem -Directory Az.* | ForEach-Object {if (Test-Path $_/test-module.ps1) {cd $_; ./test-module.ps1}}
  workingDirectory: 'artifacts/Debug'
  displayName: Test for AutoGen Modules With Windows PowerShell
  condition: and(succeeded(), ne('${{ parameters.testTarget }}', 'Test'))

- pwsh: |
   Install-Module -Name Pester -RequiredVersion 4.10.1 -Force
   Install-Module -Name Az.Accounts -Scope CurrentUser -Force
   if ($IsWindows) { $sp = ";" } else { $sp = ":" }
   $env:PSModulePath = $env:PSModulePath + $sp + (pwd).Path
   Get-ChildItem -Directory Az.* | ForEach-Object {if (Test-Path $_/test-module.ps1) {. $_/test-module.ps1}}
  workingDirectory: 'artifacts/Debug'
  displayName: 'Test for AutoGen Modules With PowerShell Core'
  errorActionPreference: 'Stop'
  condition: and(succeeded(), eq('${{ parameters.testTarget }}', 'Test'))

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- template: publish-artifacts-steps.yml
  parameters:
    artifactName: test-${{ parameters.osName }}
